#include <header.h>

CLOSE
END GATHER
DELETE GATHER
DELETE TRACE




OPEN PLC 5 CLEAR
; 7-29-2013 DELPHI LASER DRILLING MACHINE 
; JOGGING THRU MODBUS 



IF (MB_CMD_Jog_Motor1_Enable=0) AND (MB_CMD_Jog_Motor2_Enable=0) AND (MB_CMD_Jog_Motor4_Enable=0) AND (P_JOG_START = 1)
cmd "#1j/#2j/#4j/"
P_JOG_START = 0                  ; CLEAR JOG START LATCH
P_HANDHELD_INCREMENT_TEMP_X = 0 ; If jog button released stop motors and reset incremental velocity
P_HANDHELD_INCREMENT_TEMP_Y = 0
P_HANDHELD_INCREMENT_TEMP_Z = 0
ENDIF

IF (MB_CMD_Jog_Mode = 0) ; IF INCREMENTAL MODE I OFF SWITCH TO INFINATE





	; X JOG +
	IF (MB_CMD_Jog_Enable_Bit = 1) AND (MB_CMD_Jog_Plus = 1) AND (MB_CMD_Jog_Motor1_Enable = 1 )
			I_CS1_TIMER5 = 20 * CON_MSEC
			WHILE(I_CS1_TIMER5>0)
			ENDWHILE
		IF (MB_CMD_Jog_Speed_Hi_Low = 0 )
					P_HANDHELD_INCREMENT_TEMP_X = P_HANDHELD_INCREMENT_TEMP_X + P_HANDHELD_INCREMENT ; CALCULATE INCREMENT VELOCITY JOG
					I122= P_HANDHELD_INCREMENT_TEMP_X + P_HANDHELD_SPEED_LO_X ; SET LOW SPEED 
					CMD"#1J+"
					P_JOG_START = 1  ; SET JOG START LATCH
		ELSE
				 I122 = P_HANDHELD_SPEED_HI_X 
				 CMD"#1J+"
				 P_JOG_START = 1 ; SET JOG START LATCH
		ENDIF	
						
	ENDIF

	; X JOG -
IF (MB_CMD_Jog_Enable_Bit = 1) AND (MB_CMD_Jog_Minus = 1) AND (MB_CMD_Jog_Motor1_Enable = 1 )
		I_CS1_TIMER5 = 20 * CON_MSEC
			WHILE(I_CS1_TIMER5>0)
			ENDWHILE
		IF (MB_CMD_Jog_Speed_Hi_Low = 0 )
					P_HANDHELD_INCREMENT_TEMP_X = P_HANDHELD_INCREMENT_TEMP_X + P_HANDHELD_INCREMENT ; CALCULATE INCREMENT VELOCITY JOG
					I122 = P_HANDHELD_INCREMENT_TEMP_X + P_HANDHELD_SPEED_LO_X ; SET LOW SPEED
					CMD"#1J-"
					P_JOG_START = 1 ; SET JOG START LATCH
				 ELSE
				 I122 = P_HANDHELD_SPEED_HI_X 
				 CMD"#1J-"
				 P_JOG_START = 1 ; SET JOG START LATCH
				ENDIF	
				
	ENDIF
	
	; Y JOG +
	IF (MB_CMD_Jog_Enable_Bit = 1) AND (MB_CMD_Jog_Plus = 1) AND (MB_CMD_Jog_Motor2_Enable = 1 )
			I_CS1_TIMER5 = 20 * CON_MSEC
			WHILE(I_CS1_TIMER5>0)
			ENDWHILE
		IF (MB_CMD_Jog_Speed_Hi_Low = 0 )
					P_HANDHELD_INCREMENT_TEMP_Y = P_HANDHELD_INCREMENT_TEMP_Y + P_HANDHELD_INCREMENT ; CALCULATE INCREMENT VELOCITY JOG
					I222 = P_HANDHELD_INCREMENT_TEMP_Y + P_HANDHELD_SPEED_LO_Y1 ; SET LOW SPEED
					CMD"#2J+"
					P_JOG_START = 1 ; SET JOG START LATCH
		ELSE
				 I222 = P_HANDHELD_SPEED_HI_Y1
				 CMD"#2J+"
				 P_JOG_START = 1 ; SET JOG START LATCH
		ENDIF	
						
	ENDIF

	; Y JOG -
	IF (MB_CMD_Jog_Enable_Bit = 1) AND (MB_CMD_Jog_Minus = 1) AND (MB_CMD_Jog_Motor2_Enable = 1 )
		I_CS1_TIMER5 = 20 * CON_MSEC
			WHILE(I_CS1_TIMER5>0)
			ENDWHILE
		IF (MB_CMD_Jog_Speed_Hi_Low = 0 )
					P_HANDHELD_INCREMENT_TEMP_Y = P_HANDHELD_INCREMENT_TEMP_Y + P_HANDHELD_INCREMENT ; CALCULATE INCREMENT VELOCITY JOG
					I222 = P_HANDHELD_INCREMENT_TEMP_Y + P_HANDHELD_SPEED_LO_Y1	; SET LOW SPEED
					CMD"#2J-"
					P_JOG_START = 1 ; SET JOG START LATCH
				 
		ELSE
				 I222 = P_HANDHELD_SPEED_HI_Y1 
				 CMD"#2J-"
				 P_JOG_START = 1 ; SET JOG START LATCH
		ENDIF	
				
	ENDIF
	
	; Z JOG +
	IF (MB_CMD_Jog_Enable_Bit = 1) AND (MB_CMD_Jog_Plus = 1) AND (MB_CMD_Jog_Motor4_Enable = 1 )
			I_CS1_TIMER5 = 20 * CON_MSEC
			WHILE(I_CS1_TIMER5>0)
			ENDWHILE
		IF (MB_CMD_Jog_Speed_Hi_Low = 0 )
					P_HANDHELD_INCREMENT_TEMP_Z = P_HANDHELD_INCREMENT_TEMP_Z + P_HANDHELD_INCREMENT ; CALCULATE INCREMENT VELOCITY JOG
					I422 = P_HANDHELD_INCREMENT_TEMP_Z + P_HANDHELD_SPEED_LO_Z ; SET LOW SPEED
					CMD"#4J+"
					P_JOG_START = 1 ; SET JOG START LATCH
		ELSE
				 I422 = P_HANDHELD_SPEED_HI_Z  
				 CMD"#4J+"
				 P_JOG_START = 1 ; SET JOG START LATCH
		ENDIF	
						
	ENDIF

	; Z JOG -
	IF (MB_CMD_Jog_Enable_Bit = 1) AND (MB_CMD_Jog_Minus = 1) AND (MB_CMD_Jog_Motor4_Enable = 1 )
		I_CS1_TIMER5 = 20 * CON_MSEC
			WHILE(I_CS1_TIMER5>0)
			ENDWHILE
		IF (MB_CMD_Jog_Speed_Hi_Low = 0 )
					P_HANDHELD_INCREMENT_TEMP_Z = P_HANDHELD_INCREMENT_TEMP_Z + P_HANDHELD_INCREMENT ; CALCULATE INCREMENT VELOCITY JOG
					I422 = P_HANDHELD_INCREMENT_TEMP_Z + P_HANDHELD_SPEED_LO_Z	; SET LOW SPEED
					CMD"#4J-"
					P_JOG_START = 1 ; SET JOG START LATCH
				 
		ELSE
				 I422 = P_HANDHELD_SPEED_HI_Z
				 CMD"#4J-"
				 P_JOG_START = 1 ; SET JOG START LATCH
		ENDIF	
				
	ENDIF

ELSE ; INCREMENTAL MODE

; X + INCREMENTAL JOG MODE
	IF (MB_CMD_Jog_Enable_Bit = 1) AND (MB_CMD_Jog_Plus = 1) AND (MB_CMD_Jog_Motor1_Enable = 1 )
			I_CS1_TIMER5 = 20 * CON_MSEC
			WHILE(I_CS1_TIMER5>0)
			ENDWHILE
			M_MOTOR1_VAR_JOG = (MB_Motor_Jog_Step_Inc_INT + (MB_Motor_Jog_Step_Inc_DEC / 10000)) * 2000 ;CALCULATE JOG IN COUNTS
		IF (MB_CMD_Jog_Speed_Hi_Low = 0 )
					I122 =  P_HANDHELD_SPEED_LO_X ; SET LOW SPEED
					CMD"#1J:*"
					P_JOG_START = 1
						I_CS1_TIMER5 = 20 * CON_MSEC
							WHILE(I_CS1_TIMER5>0)
							ENDWHILE
							WHILE (M_MOTOR1_FOREGROUND_IN_POSITION=0)
							ENDWHILE
				 ELSE ; IF HIGH SPEED 
			   I122 = P_HANDHELD_SPEED_HI_X 
				 CMD"#1J:*"
				 P_JOG_START = 1 ; SET JOG START LATCH
				 	I_CS1_TIMER5 = 20 * CON_MSEC
							WHILE(I_CS1_TIMER5>0)
							ENDWHILE
							WHILE (M_MOTOR1_FOREGROUND_IN_POSITION=0)
							ENDWHILE
		ENDIF	
						
	ENDIF
	
	; X - INCREMENTAL JOG MODE
	IF (MB_CMD_Jog_Enable_Bit = 1) AND (MB_CMD_Jog_Minus = 1) AND (MB_CMD_Jog_Motor1_Enable = 1 )
			I_CS1_TIMER5 = 20 * CON_MSEC
			WHILE(I_CS1_TIMER5>0)
			ENDWHILE
			M_MOTOR1_VAR_JOG = (MB_Motor_Jog_Step_Inc_INT + (MB_Motor_Jog_Step_Inc_DEC / 10000)) * - 2000 ;CALCULATE JOG IN COUNTS
		IF (MB_CMD_Jog_Speed_Hi_Low = 0 )
					I122 =  P_HANDHELD_SPEED_LO_X ; SET LOW SPEED
					CMD"#1J:*"
					P_JOG_START = 1 ; SET JOG START LATCH
						I_CS1_TIMER5 = 20 * CON_MSEC
							WHILE(I_CS1_TIMER5>0)
							ENDWHILE
							WHILE (M_MOTOR1_FOREGROUND_IN_POSITION=0)
							ENDWHILE
				 ELSE ; IF HIGH SPEED 
			   I122 = P_HANDHELD_SPEED_HI_X 
				 CMD"#1J:*"
				 P_JOG_START = 1 ; SET JOG START LATCH
				 	I_CS1_TIMER5 = 20 * CON_MSEC
							WHILE(I_CS1_TIMER5>0)
							ENDWHILE
							WHILE (M_MOTOR1_FOREGROUND_IN_POSITION=0)
							ENDWHILE
		ENDIF	
						
	ENDIF
	
	; Y + INCREMENTAL JOG MODE
	IF (MB_CMD_Jog_Enable_Bit = 1) AND (MB_CMD_Jog_Plus = 1) AND (MB_CMD_Jog_Motor2_Enable = 1 )
			I_CS1_TIMER5 = 20 * CON_MSEC
			WHILE(I_CS1_TIMER5>0)
			ENDWHILE
			M_MOTOR2_VAR_JOG = (MB_Motor_Jog_Step_Inc_INT + (MB_Motor_Jog_Step_Inc_DEC / 10000)) * 2000 ;CALCULATE JOG IN COUNTS
		IF (MB_CMD_Jog_Speed_Hi_Low = 0 )
					I222 =  P_HANDHELD_SPEED_LO_Y1; SET LOW SPEED
					CMD"#2J:*"
					P_JOG_START = 1 ; SET JOG START LATCH
						I_CS1_TIMER5 = 20 * CON_MSEC
							WHILE(I_CS1_TIMER5>0)
							ENDWHILE
							WHILE (M_MOTOR2_FOREGROUND_IN_POSITION=0)
							ENDWHILE
				 ELSE ; IF HIGH SPEED 
			   I222 = P_HANDHELD_SPEED_HI_Y1 
				 CMD"#2J:*"
				 P_JOG_START = 1 ; SET JOG START LATCH
				 	I_CS1_TIMER5 = 20 * CON_MSEC
							WHILE(I_CS1_TIMER5>0)
							ENDWHILE
							WHILE (M_MOTOR2_FOREGROUND_IN_POSITION=0)
							ENDWHILE
		ENDIF	
						
	ENDIF
	
	; Y - INCREMENTAL JOG MODE
	IF (MB_CMD_Jog_Enable_Bit = 1) AND (MB_CMD_Jog_Minus = 1) AND (MB_CMD_Jog_Motor2_Enable = 1 )
			I_CS1_TIMER5 = 20 * CON_MSEC
			WHILE(I_CS1_TIMER5>0)
			ENDWHILE
			M_MOTOR2_VAR_JOG = (MB_Motor_Jog_Step_Inc_INT + (MB_Motor_Jog_Step_Inc_DEC / 10000)) * - 2000 ;CALCULATE JOG IN COUNTS
		IF (MB_CMD_Jog_Speed_Hi_Low = 0 )
					I222 =  P_HANDHELD_SPEED_LO_Y1 ; SET LOW SPEED
					CMD"#2J:*"
					P_JOG_START = 1 ; SET JOG START LATCH
						I_CS1_TIMER5 = 20 * CON_MSEC
							WHILE(I_CS1_TIMER5>0)
							ENDWHILE
							WHILE (M_MOTOR2_FOREGROUND_IN_POSITION=0)
							ENDWHILE
				 ELSE ; IF HIGH SPEED 
			   I222 = P_HANDHELD_SPEED_HI_Y1 
				 CMD"#2J:*"
				 P_JOG_START = 1 ; SET JOG START LATCH
				 	I_CS1_TIMER5 = 20 * CON_MSEC
							WHILE(I_CS1_TIMER5>0)
							ENDWHILE
							WHILE (M_MOTOR2_FOREGROUND_IN_POSITION=0)
							ENDWHILE
		ENDIF	
		
	ENDIF
		
			; Z + INCREMENTAL JOG MODE
	IF (MB_CMD_Jog_Enable_Bit = 1) AND (MB_CMD_Jog_Plus = 1) AND (MB_CMD_Jog_Motor4_Enable = 1 )
			I_CS1_TIMER5 = 20 * CON_MSEC
			WHILE(I_CS1_TIMER5>0)
			ENDWHILE
			M_MOTOR4_VAR_JOG = (MB_Motor_Jog_Step_Inc_INT + (MB_Motor_Jog_Step_Inc_DEC / 10000)) * 2000 ;CALCULATE JOG IN COUNTS
		IF (MB_CMD_Jog_Speed_Hi_Low = 0 )
					I422 =  P_HANDHELD_SPEED_LO_Z ; SET LOW SPEED
					CMD"#4J:*"
					P_JOG_START = 1 ; SET JOG START LATCH
						I_CS1_TIMER5 = 20 * CON_MSEC
							WHILE(I_CS1_TIMER5>0)
							ENDWHILE
								WHILE (M_MOTOR4_FOREGROUND_IN_POSITION=0)
							ENDWHILE
				 ELSE ; IF HIGH SPEED 
			   I422 = P_HANDHELD_SPEED_HI_Z 
				 CMD"#4J:*"
				 P_JOG_START = 1 ; SET JOG START LATCH
				 	I_CS1_TIMER5 = 20 * CON_MSEC
							WHILE(I_CS1_TIMER5>0)
							ENDWHILE
							WHILE (M_MOTOR4_FOREGROUND_IN_POSITION=0)
							ENDWHILE
		ENDIF	
						
	ENDIF
	
	; Y - INCREMENTAL JOG MODE
	IF (MB_CMD_Jog_Enable_Bit = 1) AND (MB_CMD_Jog_Minus = 1) AND (MB_CMD_Jog_Motor4_Enable = 1 )
			I_CS1_TIMER5 = 20 * CON_MSEC
			WHILE(I_CS1_TIMER5>0)
			ENDWHILE
			M_MOTOR4_VAR_JOG = (MB_Motor_Jog_Step_Inc_INT + (MB_Motor_Jog_Step_Inc_DEC / 10000)) * - 2000 ;CALCULATE JOG IN COUNTS
		IF (MB_CMD_Jog_Speed_Hi_Low = 0 )
					I422 =  P_HANDHELD_SPEED_LO_Z ; SET LOW SPEED
					CMD"#4J:*"
					P_JOG_START = 1 ; SET JOG START LATCH
						I_CS1_TIMER5 = 20 * CON_MSEC
							WHILE(I_CS1_TIMER5>0)
							ENDWHILE
							WHILE (M_MOTOR1_FOREGROUND_IN_POSITION=0)
							ENDWHILE
				 ELSE ; IF HIGH SPEED 
			   I222 = P_HANDHELD_SPEED_HI_Z 
				 CMD"#4J:*"
				 P_JOG_START = 1 ; SET JOG START LATCH
				 	I_CS1_TIMER5 = 20 * CON_MSEC
							WHILE(I_CS1_TIMER5>0)
							ENDWHILE
							WHILE (M_MOTOR1_FOREGROUND_IN_POSITION=0)
							ENDWHILE
		ENDIF					
	ENDIF
ENDIF
CLOSE



